name: Build and Deploy Layer 7 AI Voice

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check formatting
      run: npm run format:check
      
    - name: Build optimized files
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: layer7-ai-voice-dist
        path: dist/
        retention-days: 30
        
    - name: Display build info
      run: |
        echo "## üìä Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
        cat dist/build-info.json >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  deploy-pages:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    permissions:
      pages: write
      id-token: write
      contents: read
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: layer7-ai-voice-dist
        path: dist/
        
    - name: Create pages structure
      run: |
        mkdir -p pages
        cp -r dist/* pages/
        
        # Create index.html for serving files
        cat > pages/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Layer 7 AI Voice - Optimized Files</title>
            <style>
                body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif; margin: 40px; background: #f6f8fa; }
                .container { max-width: 800px; margin: 0 auto; background: white; padding: 40px; border-radius: 8px; box-shadow: 0 1px 3px rgba(0,0,0,0.1); }
                h1 { color: #0366d6; margin-bottom: 30px; }
                .file-list { list-style: none; padding: 0; }
                .file-item { margin: 10px 0; padding: 15px; background: #f1f8ff; border-radius: 6px; border-left: 3px solid #0366d6; }
                .file-link { text-decoration: none; color: #0366d6; font-weight: 500; }
                .file-link:hover { text-decoration: underline; }
                .build-info { background: #f6f8fa; padding: 20px; border-radius: 6px; margin-top: 30px; }
                pre { background: #f6f8fa; padding: 15px; border-radius: 6px; overflow-x: auto; }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>ü§ñ Layer 7 AI Voice Receptionist</h1>
                <p>Optimized and minified configuration files for the Layer 7 AI Voice Receptionist system.</p>
                
                <h2>üìÅ Available Files</h2>
                <ul class="file-list">
                    <li class="file-item">
                        <a href="Layer%207%20AI%20Voice%20Receptionist%20(POC)%20-%20Retell%20Agent.json" class="file-link">
                            üéØ Main Agent Configuration
                        </a>
                    </li>
                    <li class="file-item">
                        <a href="Core%20Prompt.md" class="file-link">
                            üìù Core Prompt Template
                        </a>
                    </li>
                    <li class="file-item">
                        <a href="RAG%20Agent%20Prompt%20-%20answerQuestion.md" class="file-link">
                            üîí RAG Agent Security Prompt
                        </a>
                    </li>
                    <li class="file-item">
                        <a href="n8n/" class="file-link">
                            ‚öôÔ∏è N8N Workflow Directory
                        </a>
                    </li>
                </ul>
                
                <div class="build-info">
                    <h3>üìä Build Information</h3>
                    <pre id="build-info">Loading build info...</pre>
                </div>
            </div>
            
            <script>
                fetch('build-info.json')
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('build-info').textContent = JSON.stringify(data, null, 2);
                    })
                    .catch(() => {
                        document.getElementById('build-info').textContent = 'Build info not available';
                    });
            </script>
        </body>
        </html>
        EOF
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: pages/
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  notify:
    needs: [build, deploy-pages]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Build Status Summary
      run: |
        echo "## üöÄ Layer 7 AI Voice Build Complete" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Status**: ${{ needs.build.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Deploy Status**: ${{ needs.deploy-pages.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.deploy-pages.result }}" == "success" ]; then
          echo "- **Live URL**: https://${{ github.repository_owner }}.github.io/layer7-ai-voice/" >> $GITHUB_STEP_SUMMARY
        fi